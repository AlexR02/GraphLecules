/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package moleculeInformationCard;

import java.awt.Color;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.ScrollPane;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JPanel;
import org.gephi.graph.api.Edge;
import org.gephi.graph.api.Graph;
import org.gephi.graph.api.Node;

/**
 *
 * @author alex
 */
public class NodeInformationJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NodeInformationJFame
     */
    public NodeInformationJFrame(Node node, Graph graph) {
        initComponents();

        ScrollPane scroll = new ScrollPane();
        JPanel panel = new JPanel(new GridBagLayout());

        List<NodeInformationJPanel> nodeInfoPanelList = new ArrayList<>();

        for (Edge edge : graph.getEdges().toArray()) {
            if (edge.getTarget().equals(node) || edge.getSource().equals(node)) {
                NodeInformationJPanel nodeInformationJPanel = new NodeInformationJPanel(edge, node, graph);
                nodeInfoPanelList.add(nodeInformationJPanel);
            }
        }
        
        Collections.sort(nodeInfoPanelList, (n1, n2) -> {
            Double v1 = Double.valueOf(n1.getSimilarityTextField().getText());
            Double v2 = Double.valueOf(n2.getSimilarityTextField().getText());
            return v2.compareTo(v1);
        });

        int y = 0;

        for (NodeInformationJPanel nodeInfoPanel : nodeInfoPanelList) {
            GridBagConstraints gridBagConstraints = new GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = y;
            gridBagConstraints.gridwidth = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 0.0;
            gridBagConstraints.anchor = GridBagConstraints.NORTH;

            panel.add(nodeInfoPanel, gridBagConstraints);

            y += 1;
        }

        scroll.add(panel);

        GridBagConstraints gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.anchor = GridBagConstraints.NORTH;

        this.add(scroll, gridBagConstraints);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setSize(600, 800);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
